"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from src.config.logging import SecureLogger
from src.core.registration_manager import registration_manager
from src.core.storage import AdminManager
from src.core.auth import get_user_role
from src.bot.keyboards import get_registration_groups_keyboard, get_main_keyboard
from src.bot.utils import send_message_with_persistent_keyboard

logger = SecureLogger(__name__)


class RegistrationHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    @staticmethod
    async def start_registration(update: Update, chat_id: int):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        registration_manager.start_registration(chat_id)
        
        welcome_text = (
            "üëã **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CelsiusPulse Bot!**\n\n"
            "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n\n"
            "üîπ **–®–∞–≥ 1/3: –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û**\n\n"
            "üìã **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**\n"
            "‚Ä¢ 3-5 —Å–ª–æ–≤ (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ)\n"
            "‚Ä¢ –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –æ—Ç 2 –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã —Ä—É—Å—Å–∫–æ–≥–æ/–∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞\n"
            "‚Ä¢ –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã\n"
            "‚Ä¢ –ù–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–µ –±–µ—Å—Å–º—ã—Å–ª–∏—Ü–∞\n\n"
            "üìù **–ü—Ä–∏–º–µ—Ä—ã:**\n"
            "‚Ä¢ –ü—É—à–∫–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á\n"
            "‚Ä¢ –°–∞–ª—Ç—ã–∫–æ–≤-–©–µ–¥—Ä–∏–Ω –ú–∏—Ö–∞–∏–ª –ï–≤–≥—Ä–∞—Ñ–æ–≤–∏—á\n"
            "‚Ä¢ –ì—é–≥–æ –í–∏–∫—Ç–æ—Ä-–ú–∞—Ä–∏ –ñ–æ–∑–µ—Ñ–æ–≤–∏—á\n"
            "‚Ä¢ –¢–æ–ª–∫–∏–Ω –î–∂–æ–Ω –†–æ–Ω–∞–ª—å–¥ –†—É—ç–ª\n"
            "‚Ä¢ –ú–∞–∫–∏–∞–≤–µ–ª–ª–∏ –ù–∏–∫–∫–æ–ª–æ –î–∏ –ë–µ—Ä–Ω–∞—Ä–¥–æ –î–µ–∏"
        )
        
        await send_message_with_persistent_keyboard(
            update, 
            welcome_text, 
            parse_mode='Markdown',
            is_registration=True
        )
    
    @staticmethod
    async def show_group_selection(update: Update, chat_id: int):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø (—à–∞–≥ 2 —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)"""
        state = registration_manager.get_registration_state(chat_id)
        if not state or not state.fio:
            await RegistrationHandler.start_registration(update, chat_id)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        from src.core.monitoring import get_all_groups
        available_groups = get_all_groups()
        
        if not available_groups:
            error_text = (
                "‚ùå **–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏**\n\n"
                "–ì—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. "
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            await update.message.reply_text(error_text, parse_mode='Markdown')
            registration_manager.clear_registration(chat_id)
            return
        
        keyboard = get_registration_groups_keyboard(available_groups, state.selected_groups)
        
        groups_text = (
            f"‚úÖ **–§–ò–û —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:** `{state.fio}`\n\n"
            "üîπ **–®–∞–≥ 2/3: –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–∏ —Ä–∞–±–æ—á–∏–µ –≥—Ä—É–ø–ø—ã**\n\n"
            "üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã:**\n"
            f"‚Ä¢ –í—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(available_groups)} –≥—Ä—É–ø–ø\n"
            f"‚Ä¢ –í—ã–±—Ä–∞–Ω–æ: {len(state.selected_groups)} –≥—Ä—É–ø–ø\n\n"
            "üí° **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n"
            "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≥—Ä—É–ø–ø—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø\n"
            "‚Ä¢ –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥—Ä—É–ø–ø\n"
            "‚Ä¢ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã –æ—Ç–º–µ—á–µ–Ω—ã ‚úÖ\n"
            "‚Ä¢ –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ **–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä**"
        )
        
        try:
            if hasattr(update, 'callback_query') and update.callback_query:
                await update.callback_query.edit_message_text(
                    groups_text,
                    reply_markup=keyboard,
                    parse_mode='Markdown'
                )
            else:
                await update.message.reply_text(
                    groups_text,
                    reply_markup=keyboard,
                    parse_mode='Markdown'
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø: {e}")
            await update.message.reply_text(
                "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä—É–ø–ø. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                parse_mode='Markdown'
            )
    
    @staticmethod
    async def handle_group_toggle(update: Update, chat_id: int, group: str):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã"""
        query = update.callback_query
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≥—Ä—É–ø–ø—É
        is_added = registration_manager.toggle_group(chat_id, group)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await RegistrationHandler.show_group_selection(update, chat_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        action = "–¥–æ–±–∞–≤–ª–µ–Ω–∞" if is_added else "—É–±—Ä–∞–Ω–∞"
        await query.answer(f"–ì—Ä—É–ø–ø–∞ {group} {action}", show_alert=False)
    
    @staticmethod
    async def handle_finish_group_selection(update: Update, chat_id: int):
        """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏"""
        state = registration_manager.get_registration_state(chat_id)
        
        if not state or not state.selected_groups:
            await update.callback_query.answer(
                "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º—É–º –æ–¥–Ω—É –≥—Ä—É–ø–ø—É", 
                show_alert=True
            )
            return
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        if registration_manager.finish_group_selection(chat_id):
            position_text = (
                f"‚úÖ **–§–ò–û:** `{state.fio}`\n"
                f"‚úÖ **–ì—Ä—É–ø–ø—ã:** {', '.join(state.selected_groups)}\n\n"
                "üîπ **–®–∞–≥ 3/3: –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å**\n\n"
                "üìã **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**\n"
                "‚Ä¢ –ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞\n"
                "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å"
            )
            
            await update.callback_query.edit_message_text(
                position_text,
                parse_mode='Markdown'
            )
        else:
            await update.callback_query.answer(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É",
                show_alert=True
            )
    
    @staticmethod
    async def complete_registration(update: Update, chat_id: int):
        """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        registration_data = registration_manager.get_registration_data(chat_id)
        
        if not registration_data:
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
            registration_manager.clear_registration(chat_id)
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        success = AdminManager.save_admin_info(
            chat_id,
            registration_data['fio'],
            registration_data['position'],
            role="admin",  # –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç —Ä–æ–ª—å admin
            groups=registration_data['groups']
        )
        
        if success:
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            registration_manager.clear_registration(chat_id)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            role = get_user_role(chat_id)
            
            success_text = (
                "üéâ **–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!**\n\n"
                f"üë§ **–§–ò–û:** {registration_data['fio']}\n"
                f"üíº **–î–æ–ª–∂–Ω–æ—Å—Ç—å:** {registration_data['position']}\n"
                f"üè¢ **–ì—Ä—É–ø–ø—ã:** {', '.join(registration_data['groups'])}\n"
                f"üîê **–†–æ–ª—å:** {role}\n\n"
                "‚úÖ –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã.\n\n"
                "üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:"
            )
            
            keyboard = get_main_keyboard(role)
            
            await update.message.reply_text(
                success_text,
                reply_markup=keyboard,
                parse_mode='Markdown'
            )
        else:
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
            registration_manager.clear_registration(chat_id)
    
    @staticmethod
    async def handle_registration_reset(update: Update, chat_id: int, text: str):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã —Å–±—Ä–æ—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        registration_manager.clear_registration(chat_id)
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å–±—Ä–æ—Å–∞
        try:
            await update.message.delete()
            logger.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç {chat_id}: {text}")
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞: {e}")
        
        reset_text = (
            "üîÑ **–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞**\n\n"
            "–ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ!\n\n"
        )
        
        await update.message.reply_text(reset_text, parse_mode='Markdown')
        
        # –°—Ä–∞–∑—É –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await RegistrationHandler.start_registration(update, chat_id)


# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
handle_user_registration = RegistrationHandler.start_registration