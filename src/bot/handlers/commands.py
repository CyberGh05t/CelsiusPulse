"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
from telegram import Update
from telegram.ext import ContextTypes
from src.config.logging import SecureLogger
from src.core.auth import get_user_role, is_authorized
from src.core.storage import AdminManager
from src.bot.messages import format_welcome_message, format_error_message
from src.bot.keyboards import get_main_keyboard, get_quick_main_keyboard
from src.bot.utils import reply_with_keyboard
from src.utils.security import validate_request_security

logger = SecureLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    chat_id = update.effective_chat.id
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    is_safe, error_msg = validate_request_security(chat_id, "/start")
    if not is_safe:
        await reply_with_keyboard(update, format_error_message('rate_limited', error_msg))
        return
    
    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è {chat_id}")
    
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ä–æ–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start
    from src.bot.handlers.callbacks import clear_threshold_context
    clear_threshold_context(user.id)
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role = get_user_role(chat_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        admin_info = AdminManager.load_admin_info(chat_id)
        
        if not admin_info or 'fio' not in admin_info:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            from src.bot.handlers.registration_handlers import registration_manager
            existing_context = registration_manager.get_registration_data(chat_id) or {}
            if existing_context.get('step'):
                current_step = existing_context.get('step')
                
                if current_step == 'fio':
                    await update.message.reply_text(
                        "‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ\n\n"
                        "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –§–ò–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
                        parse_mode='Markdown'
                    )
                
                elif current_step == 'groups':
                    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–≥–∏–æ–Ω–æ–≤ —Å —É—á–µ—Ç–æ–º —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
                    from src.core.monitoring import get_all_groups
                    from src.bot.keyboards import get_registration_groups_keyboard
                    
                    available_groups = get_all_groups()
                    selected_groups = existing_context.get('selected_groups', [])
                    keyboard = get_registration_groups_keyboard(available_groups, selected_groups)
                    
                    message_text = "‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ\n\n"
                    message_text += f"üë§ –§–ò–û: {existing_context.get('fio', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
                    message_text += "üó∫Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω(—ã):\n\n"
                    if selected_groups:
                        message_text += f"‚úÖ –£–∂–µ –≤—ã–±—Ä–∞–Ω–æ: {', '.join(selected_groups)}\n\n"
                    message_text += "üí° –î–ª—è —Å–±—Ä–æ—Å–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: —Å–±—Ä–æ—Å"
                    
                    await update.message.reply_text(
                        message_text,
                        reply_markup=keyboard,
                        parse_mode='Markdown'
                    )
                
                elif current_step == 'position':
                    selected_groups = existing_context.get('selected_groups', [])
                    groups_text = ', '.join(selected_groups) if selected_groups else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
                    
                    await update.message.reply_text(
                        "‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ\n\n"
                        f"üë§ –§–ò–û: {existing_context.get('fio', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
                        f"üó∫Ô∏è –†–µ–≥–∏–æ–Ω(—ã): {groups_text}\n\n"
                        "üíº –í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å:",
                        parse_mode='Markdown'
                    )
                
                else:
                    await update.message.reply_text(
                        "‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ\n\n"
                        "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                        parse_mode='Markdown'
                    )
                
                return
            
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ë–ï–ó –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
            logger.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {chat_id}")
            welcome_message = format_welcome_message(is_new_user=True, chat_id=chat_id)
            await update.message.reply_text(welcome_message, parse_mode='Markdown')
        else:
            # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            fio = admin_info.get('fio', '')
            position = admin_info.get('position', '')
            
            welcome_message = format_welcome_message(fio, position, is_new_user=False)
            keyboard = get_main_keyboard(role)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
            sent_message = await update.message.reply_text(
                welcome_message,
                reply_markup=keyboard,
                parse_mode='Markdown'
            )
            
            # –í–ê–ñ–ù–û: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            if sent_message:
                from src.bot.utils import track_user_menu
                track_user_menu(
                    user_id=chat_id, 
                    chat_id=chat_id, 
                    message_id=sent_message.message_id, 
                    menu_type="main",
                    menu_context={}
                )
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start –¥–ª—è {chat_id}: {e}")
        await reply_with_keyboard(
            update,
            format_error_message('system_error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã')
        )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    """
    chat_id = update.effective_chat.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    is_safe, error_msg = validate_request_security(chat_id, "/help")
    if not is_safe:
        await reply_with_keyboard(update, format_error_message('rate_limited', error_msg))
        return
    
    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è {chat_id}")
    
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ä–æ–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /help
    from src.bot.handlers.callbacks import clear_threshold_context
    user = update.effective_user
    clear_threshold_context(user.id)
    
    try:
        role = get_user_role(chat_id)
        
        help_text = """
üå°Ô∏è CelsiusPulse Bot - –°–ø—Ä–∞–≤–∫–∞

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
‚Ä¢ üîî –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö
‚Ä¢ üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ –≥—Ä—É–ø–ø–∞–º —Å–∫–ª–∞–¥—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π

–ö–æ–º–∞–Ω–¥—ã:
‚Ä¢ /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

–ù–∞–≤–∏–≥–∞—Ü–∏—è:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å–∏—Å—Ç–µ–º–µ.
        """
        
        if role in ['admin', 'big_boss']:
            help_text += """
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
‚Ä¢ ‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
‚Ä¢ üë• –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ üìä –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            """
        
        if role == 'big_boss':
            help_text += """
–§—É–Ω–∫—Ü–∏–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è:
‚Ä¢ üîê –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
‚Ä¢ üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
‚Ä¢ üõ†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            """
        
        help_text += """
üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        """
        
        await reply_with_keyboard(update, help_text, parse_mode='Markdown')
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /help –¥–ª—è {chat_id}: {e}")
        await reply_with_keyboard(
            update,
            format_error_message('system_error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø—Ä–∞–≤–∫–∏')
        )