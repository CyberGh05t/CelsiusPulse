# ===========================================================
# CelsiusPulse Temperature Monitoring Bot - Environment Variables
# ===========================================================
# 
# ИНСТРУКЦИИ:
# 1. Скопируйте этот файл как '.env' в корень проекта
# 2. Заполните все значения реальными данными
# 3. Убедитесь что .env файл добавлен в .gitignore
# 4. НИКОГДА не коммитьте .env файл с реальными значениями!
#
# ===========================================================

# ===========================================================
# TELEGRAM BOT CONFIGURATION (ОБЯЗАТЕЛЬНО)
# ===========================================================

# Telegram Bot Token от @BotFather
# Получить: https://t.me/botfather -> /newbot
# Формат: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz
TELEGRAM_BOT_TOKEN=your_bot_token_here

# Режим работы бота: polling или webhook
# polling - для разработки и простого деплоя
# webhook - для продакшна с внешним URL
BOT_MODE=polling

# Webhook URL (только для режима webhook)
# Должен быть HTTPS и доступен извне
# Пример: https://yourdomain.com/webhook
WEBHOOK_URL=

# Порт для webhook сервера (по умолчанию 8080)
WEBHOOK_PORT=8080

# Секретный токен для webhook (рекомендуется)
# Случайная строка для безопасности webhook
WEBHOOK_SECRET=your_webhook_secret_here

# ===========================================================
# DATA SOURCE API (ОБЯЗАТЕЛЬНО)
# ===========================================================

# URL для получения данных о температуре датчиков
# Обычно Google Apps Script или другой API
# Должен возвращать JSON с данными датчиков
SENSORS_API_URL=https://script.google.com/macros/s/your_script_id/exec

# API ключ для доступа к данным (если требуется)
SENSORS_API_KEY=

# Таймаут запросов к API (в секундах)
API_TIMEOUT=30

# Интервал проверки датчиков (в секундах)
# Рекомендуется: 300 (5 минут) для продакшна
MONITORING_INTERVAL=300

# ===========================================================
# SECURITY & RATE LIMITING
# ===========================================================

# Максимальное количество запросов в минуту на пользователя
RATE_LIMIT_PER_MINUTE=30

# Время блокировки после превышения лимитов (в секундах)
RATE_LIMIT_BLOCK_TIME=300

# Максимальная длина сообщения от пользователя
MAX_MESSAGE_LENGTH=1000

# Включить дополнительные проверки безопасности
SECURITY_ENHANCED=true

# ===========================================================
# LOGGING & MONITORING
# ===========================================================

# Уровень логирования: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Максимальный размер лог файла (в байтах)
LOG_MAX_SIZE=10485760

# Количество старых лог файлов для сохранения
LOG_BACKUP_COUNT=5

# Папка для логов (относительно корня проекта)
LOG_DIR=data/logs

# Включить логирование в файл
LOG_TO_FILE=true

# Включить логирование в консоль
LOG_TO_CONSOLE=true

# Маскировать чувствительные данные в логах
LOG_MASK_SENSITIVE=true

# ===========================================================
# ALERTING & NOTIFICATIONS
# ===========================================================

# Интервал отправки повторных уведомлений (в секундах)
# 3600 = 1 час, 7200 = 2 часа
ALERT_COOLDOWN_SECONDS=3600

# Максимальное количество попыток отправки уведомления
MAX_NOTIFICATION_RETRIES=3

# Задержка между попытками отправки (в секундах)
NOTIFICATION_RETRY_DELAY=30

# Отправлять уведомления о восстановлении нормальной температуры
SEND_RECOVERY_NOTIFICATIONS=true

# Формат временных меток в уведомлениях
# %Y-%m-%d %H:%M:%S для формата: 2024-08-18 15:30:45
TIMESTAMP_FORMAT=%Y-%m-%d %H:%M:%S

# Часовой пояс для отображения времени
# Примеры: Europe/Moscow, Asia/Yekaterinburg, UTC
TIMEZONE=Europe/Moscow

# ===========================================================
# DATABASE & STORAGE (OPTIONAL)
# ===========================================================

# Тип хранилища данных: json или redis или postgresql
# json - файловое хранение (по умолчанию)
# redis - для кеширования и высокой производительности  
# postgresql - для больших объемов данных
STORAGE_TYPE=json

# Redis настройки (если STORAGE_TYPE=redis)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# PostgreSQL настройки (если STORAGE_TYPE=postgresql)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=celsiuspulse
DB_USER=celsiuspulse
DB_PASSWORD=your_db_password_here

# ===========================================================
# PERFORMANCE & OPTIMIZATION
# ===========================================================

# Размер пула соединений для HTTP запросов
HTTP_POOL_SIZE=100

# Таймаут соединения (в секундах)
HTTP_CONNECT_TIMEOUT=10

# Включить сжатие HTTP запросов
HTTP_COMPRESSION=true

# Размер кеша для пороговых значений (количество групп)
THRESHOLD_CACHE_SIZE=50

# Время жизни кеша (в секундах)
CACHE_TTL=300

# ===========================================================
# DEVELOPMENT & DEBUG
# ===========================================================

# Режим разработки (включает дополнительное логирование)
DEBUG_MODE=false

# Включить профилирование производительности
ENABLE_PROFILING=false

# Мок API для тестирования (вместо реального API)
USE_MOCK_API=false

# Путь к файлу с мок данными для тестов
MOCK_DATA_FILE=tests/mock_data.json

# Включить детальные метрики
ENABLE_METRICS=false

# ===========================================================
# EXTERNAL SERVICES (OPTIONAL)
# ===========================================================

# Sentry DSN для мониторинга ошибок
SENTRY_DSN=

# Prometheus metrics endpoint
PROMETHEUS_PORT=9090

# Health check endpoint port
HEALTH_CHECK_PORT=8081

# ===========================================================
# BACKUP & RECOVERY
# ===========================================================

# Автоматическое резервное копирование конфигураций
AUTO_BACKUP=true

# Интервал резервного копирования (в секундах)
BACKUP_INTERVAL=86400

# Количество резервных копий для сохранения
BACKUP_RETENTION_COUNT=7

# Папка для резервных копий
BACKUP_DIR=data/backups

# ===========================================================
# ВАЖНЫЕ ЗАМЕЧАНИЯ ПО БЕЗОПАСНОСТИ
# ===========================================================
#
# 1. НИКОГДА не коммитьте файл .env в репозиторий!
# 2. Используйте сильные пароли и токены
# 3. Регулярно меняйте секретные ключи
# 4. В продакшне используйте HTTPS для всех API
# 5. Ограничьте доступ к .env файлу (chmod 600)
# 6. Используйте отдельные значения для dev/test/prod
# 7. Мониторьте логи на предмет подозрительной активности
#
# ===========================================================